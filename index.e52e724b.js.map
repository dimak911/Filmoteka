{"mappings":"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","sources":["src/js/search.js","src/js/pagination.js","src/js/render-movie-cards.js","src/js/genres.json","src/js/create-movie-markup.js"],"sourcesContent":["import { API_KEY, SEARCH_URL } from './api/api-vars';\nimport { getMovies } from './api/fetch-movie.js';\nimport { renderPagination } from './pagination'; //Viktor;\nimport { renderMovieCards } from './render-movie-cards';\n\nconst refs = {\n    form: document.querySelector('.header__form'),\n    gallery: document.querySelector('.gallery'),\n    loader: document.querySelector(\".backdrop-loader\"),\n}\nif (refs.form) {\n    refs.form.addEventListener('submit', onFormSubmit);\n}\n\n\n\n// export function searchMovies(movie, pageNumber) {\n//     return getMovies(\n//         `${SEARCH_URL}?api_key=${API_KEY}&query=${movie}&page=${pageNumber}`\n//     ); \n// }\n\n//Viktor rewrited function: save searchUrl to localStorage for using in pagination;\nexport function searchMovies(searchText) {\n    const searchUrl = `${SEARCH_URL}&query=${searchText}`;\n    localStorage.setItem('LAST_REQUESTED_URL', searchUrl)\n    return getMovies(searchUrl); \n}\n\nlet searchText = '';\n\nexport async function onFormSubmit(e) {\n    e.preventDefault();\n\n    refs.loader.classList.remove('backdrop-loader--is-hidden');\n    \n    clearGallery();\n    \n    searchText = e.currentTarget.query.value.trim();\n    \n    const muvie = await searchMovies(searchText);\n\n    refs.loader.classList.add('backdrop-loader--is-hidden');\n\n    e.target.reset();\n    \n    renderMovieCards(muvie.results);\n    renderPagination(muvie.page, muvie.total_pages);  //Viktor: renderPagination function added \n}\n\nfunction clearGallery() {\n    refs.gallery.innerHTML = '';\n}\n\n\n\n\n\n\n\n","import {getMovies} from \"./api/fetch-movie\";\nimport {renderMovieCards} from \"./render-movie-cards\";\n\nconst paginationWrapRef = document.querySelector(\".pagination-wrap\");\nconst loader = document.querySelector(\".backdrop-loader\");\n\nexport function renderPagination(currentPage, totalPages) {\n    let buttons = [];\n\n    if (currentPage > 1) {\n        buttons.push(createButton(currentPage - 1, true, \"arrow-left\"));\n    }\n\n    if (currentPage >= 4) {\n        buttons.push(createButton(1, true, \"first-button\"));\n    }\n\n    if (currentPage >= 5) {\n        buttons.push(createDotsEl());\n    }\n\n    if (currentPage >= 2) {\n        if (currentPage >= 3) {\n            buttons.push(createButton(currentPage-2))\n        }\n        buttons.push(createButton(currentPage-1));\n    }\n\n    buttons.push(createButton(currentPage, false));\n\n    if (currentPage <= totalPages-1) {\n        buttons.push(createButton(currentPage+1));\n        if (currentPage <= totalPages-2) {\n            buttons.push(createButton(currentPage+2));\n        }\n    }\n\n    if (currentPage < totalPages-3) {\n        buttons.push(createDotsEl());\n    }\n\n    if (currentPage <= totalPages-3) {\n        buttons.push(createButton(totalPages, true, \"last-button\"));\n    }\n\n    if (currentPage < totalPages) {\n        buttons.push(createButton(currentPage + 1, true, \"arrow-right\"));\n    }\n\n    paginationWrapRef.innerHTML = \"\";\n\n    buttons.forEach(button => paginationWrapRef.append(button));\n}\n\nfunction createBaseButton () {\n    const baseButton = document.createElement(\"button\");\n    baseButton.classList.add(\"pagination-button\");\n    return baseButton;\n}\n\nfunction createDotsEl() {\n    const newDotsEl = document.createElement(\"span\");\n    newDotsEl.innerHTML = `<span class=\"dots\">...</span>`;\n    return newDotsEl;\n}\n\nfunction createButton(pageNum, isButtonClickable = true, additionalClass = null) {\n    const newButton = createBaseButton();\n    newButton.dataset[\"page\"] = pageNum;\n    newButton.textContent = additionalClass && additionalClass.includes(\"arrow\")  ? \"\" : pageNum;\n\n    if (additionalClass) {\n        newButton.classList.add(additionalClass);\n    }\n\n    if (isButtonClickable) {\n        newButton.addEventListener(\"click\", pageButtonPressed);\n    } else {\n        newButton.classList.add(\"pagination-button--current\");\n    }\n\n    return newButton;\n}\n\nfunction pageButtonPressed(event) {\n    const page = event.target.dataset.page;\n    const lastUrl = localStorage.getItem(\"LAST_REQUESTED_URL\");\n    const newUrl = `${lastUrl}&page=${page}`;\n\n    loader.classList.remove('backdrop-loader--is-hidden');\n\n    getMovies(newUrl)\n        .then(response => {\n        loader.classList.add('backdrop-loader--is-hidden');\n        renderMovieCards(response.results);\n        renderPagination(response.page, response.total_pages);\n    })\n}\n","import { getMovies } from './api/fetch-movie';\nimport { createMovieMarkup } from './create-movie-markup';\nimport { TREND_URL } from './api/api-vars';\nimport { renderPagination } from './pagination.js';\n\nconst gallery = document.querySelector('.gallery');\n(async () => {\n  const trendMoviesList = await getMovies(TREND_URL);\n\n  renderMovieCards(trendMoviesList.results);\n\n  // Viktor:need to save last url to localstorage\n  localStorage.setItem('LAST_REQUESTED_URL', TREND_URL);\n  // Viktor:render pagination buttons\n  renderPagination(trendMoviesList.page, trendMoviesList.total_pages);\n})();\n\nexport function renderMovieCards(movies) {\n  const movieGalleryMarkup = movies\n    .map(movie => createMovieMarkup(movie))\n    .join('');\n\n  gallery && appendMarkup();\n\n  function appendMarkup() {\n    gallery.innerHTML = movieGalleryMarkup;\n  }\n}\n","{\n  \"genres\": [\n    { \"id\": 28, \"name\": \"Action\" },\n    { \"id\": 12, \"name\": \"Adventure\" },\n    { \"id\": 16, \"name\": \"Animation\" },\n    { \"id\": 35, \"name\": \"Comedy\" },\n    { \"id\": 80, \"name\": \"Crime\" },\n    { \"id\": 99, \"name\": \"Documentary\" },\n    { \"id\": 18, \"name\": \"Drama\" },\n    { \"id\": 10751, \"name\": \"Family\" },\n    { \"id\": 14, \"name\": \"Fantasy\" },\n    { \"id\": 36, \"name\": \"History\" },\n    { \"id\": 27, \"name\": \"Horror\" },\n    { \"id\": 10402, \"name\": \"Music\" },\n    { \"id\": 9648, \"name\": \"Mystery\" },\n    { \"id\": 10749, \"name\": \"Romance\" },\n    { \"id\": 878, \"name\": \"Science Fiction\" },\n    { \"id\": 10770, \"name\": \"TV Movie\" },\n    { \"id\": 53, \"name\": \"Thriller\" },\n    { \"id\": 10752, \"name\": \"War\" },\n    { \"id\": 37, \"name\": \"Western\" }\n  ]\n}","import { genres } from './genres.json';\nimport { BASE_IMG_URL } from './api/api-vars';\n\nexport function createMovieMarkup(movie) {\n  const { title, genre_ids, release_date, poster_path, id } = movie;\n\n  let year = '';\n  if (typeof release_date !== 'undefined' && release_date.length > 4) {\n    year = release_date.slice(0, 4);\n  }\n\n  const movieGenresList = getMovieGenresList(genre_ids).join(', ');\n\n  if (poster_path === null) {\n    return `<li>\n            <a class=\"gallery__link\" href=\"#\">\n              <img class=\"gallery__image\" data-id=\"${id}\" src=\"https://dummyimage.com/395x574/000/fff.jpg&text=no+poster\" alt=\"${title} movie poster\" loading=\"lazy\">\n            \n            <div class=\"info\">\n              <p class=\"info__item\">${title}</p>\n              <div class=\"info-detail\">\n                <p class=\"info-detail__item\">${movieGenresList}</p>\n                <p class=\"info-detail__item\">${year}</p>\n              </div>\n            </div>\n            </a>\n          </li>`;\n  }\n\n  return `<li>\n            <a class=\"gallery__link\" href=\"#\">\n              <img class=\"gallery__image\" data-id=\"${id}\" src=\"${BASE_IMG_URL}${poster_path}\" alt=\"${title} movie poster\" loading=\"lazy\">\n            \n            <div class=\"info\">\n              <h3 class=\"info__item\">${title}</h3>\n              <div class=\"info-detail\">\n                <p class=\"info-detail__item\">${movieGenresList}</p>\n                <p class=\"info-detail__item\">${year}</p>\n              </div>\n            </div>\n            </a>\n          </li>`;\n}\n\nexport function getMovieGenresList(genresIdsList) {\n  let movieGenres = genres.reduce((acc, { id, name }) => {\n    if (genresIdsList.includes(id)) {\n      acc.push(name);\n    }\n    return acc;\n  }, []);\n  if (movieGenres.length > 3) {\n    movieGenres = movieGenres.slice(0, 2);\n    movieGenres.push('Other');\n  }\n  return movieGenres;\n}\n"],"names":["$edYM8","parcelRequire","$gWoIc","$1a18d98a372d8e28$exports","JSON","parse","$0eb172ba7d82ec3b$export$8a980da361a674f","movie","title","genre_ids","release_date","poster_path","id","year","length","slice","movieGenresList","genresIdsList","movieGenres","genres","reduce","acc","name","includes","push","$0eb172ba7d82ec3b$export$e06660f04e0d4ab0","join","BASE_IMG_URL","$662e245138d28e1d$var$gallery","document","querySelector","$662e245138d28e1d$export$bc472845f7b7844b","movies","movieGalleryMarkup","map","innerHTML","trendMoviesList","getMovies","TREND_URL","results","localStorage","setItem","$1bab9c519cfa82bc$export$825408fbca4f2040","page","total_pages","$1bab9c519cfa82bc$var$paginationWrapRef","$1bab9c519cfa82bc$var$loader","currentPage","totalPages","buttons","$1bab9c519cfa82bc$var$createButton","$1bab9c519cfa82bc$var$createDotsEl","forEach","button","append","newDotsEl","createElement","pageNum","isButtonClickable","additionalClass","newButton","baseButton","classList","add","$1bab9c519cfa82bc$var$createBaseButton","dataset","textContent","addEventListener","$1bab9c519cfa82bc$var$pageButtonPressed","event","target","newUrl","getItem","remove","then","response","$b18fd23e9761f35d$var$refs","form","gallery","loader","async","e","preventDefault","$b18fd23e9761f35d$var$searchText","currentTarget","query","value","trim","muvie","searchText1","searchUrl","SEARCH_URL","$b18fd23e9761f35d$export$b0c4d3ac9887d994","reset"],"version":3,"file":"index.e52e724b.js.map"}