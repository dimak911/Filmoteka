{"mappings":"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","sources":["src/js/movie-modal.js","src/js/api/fetch-movie.js","src/js/api/api-vars.js","src/js/pagination.js","src/js/render-movie-cards.js","src/js/create-movie-markup.js","src/js/genres.json","src/js/queue.js"],"sourcesContent":["import { getMovies } from './api/fetch-movie';\nimport { ID_URL, BASE_IMG_URL, API_KEY } from './api/api-vars';\n\n\n\n\nconst refs = {\n  backdrop: document.querySelector('.backdrop'),\n  closeBtn: document.querySelector('button[data-dismiss=\"modal\"]'),\n  cardModal : document.querySelector('.gallery'),\n  imgContainer: document.querySelector('.js-modal'),\n};\n\nconst { backdrop, closeBtn, cardModal, imgContainer } = refs;\n\nexport default function addAllEventListenersModal() {\n  closeBtn.addEventListener('click', onCloseBtnClick);\n  window.addEventListener('keydown', onKeydownEscape);\n  backdrop.addEventListener('click', onBackdropClick);\n  \n}\n\nfunction onCloseBtnClick(e) {\n  e.preventDefault();\n  backdrop.classList.add('is-hidden');\n  removeAllEventListenersModal();\n}\n\nfunction onKeydownEscape(e) {\n  e.preventDefault();\n  if (e.key === 'Escape') {\n    backdrop.classList.add('is-hidden');\n  }\n  removeAllEventListenersModal();\n}\n\nfunction onBackdropClick(e) {\n  if (!e.target.classList.contains('backdrop')) {\n    return;\n  }\n  backdrop.classList.add('is-hidden');\n  removeAllEventListenersModal();\n}\n\nfunction removeAllEventListenersModal() {\n  closeBtn.removeEventListener('click', onCloseBtnClick);\n  window.removeEventListener('keydown', onKeydownEscape);\n  backdrop.removeEventListener('click', onBackdropClick);\n}\n\ncardModal.addEventListener('click', clickOnMovieHandler);\n\nlet movieId\n// клик\nfunction clickOnMovieHandler(e) {\n  e.preventDefault();\n\n  \n    backdrop.classList.remove('is-hidden')\n if (e.target.nodeName !== 'IMG' && e.target.nodeName !== 'H2') {\n   return;\n }\n\n  movieId = e.target.dataset.id;\n \n \n  fetchById(movieId);\n\n  addAllEventListenersModal();\n  clearFilmCard();\n\n}\n\n\n\n//Фетч фильма по ID\n function fetchById(movieId) {\n  const idURL = `${ID_URL}${movieId}?api_key=${API_KEY}&language=en-US`\n getMovies(idURL).then(\n  res => {\n    renderFilmCard(res);\n    backdrop.setAttribute('id', movieId);\n    \n  }\n)\n \n}\n\nfunction renderFilmCard(film) {\n\nmodalFilmCart(film)\n \n}\n\nfunction clearFilmCard() {\n  imgContainer.innerHTML = '';\n}\n\n  const getGenresNames = genres => genres.map(genre => genre.name).join(', ');\n        \n\nfunction modalFilmCart({ \n  title, \n  original_title,\n  vote_average, \n  vote_count, \n  popularity, \n  genres, \n  overview,\n  poster_path, } ) {\n\n    \n    const markup = `\n      <div class=\"image-container\">\n    <img \n    src=\"${BASE_IMG_URL}${poster_path}\"\n      alt=\"${title} movie poster}\" \n      width=\"240\" height=\"357\" \n      class=\"image\"\n      />\n    </div>\n    <div class=\"content\">\n    <h2 class=\"title\">${title}</h2>\n    <div class=\"properties\">\n      <div class=\"titles\">\n          <p class=\"property\">Vote / Votes</p>\n          <p class=\"property\">Popularity</p>\n          <p class=\"property\">Original Title</p>\n          <p class=\"property\">Genre</p>\n      </div>\n      <div class=\"values\">\n          <p class=\"value\"><span class=\"first-mark\">${vote_average}</span>&nbsp;/&nbsp;<span class=\"second-mark\">${vote_count}</span></p>\n          <p class=\"value\">${popularity}</p>\n          <p class=\"value\">${original_title}</p>\n          <p class=\"value\">${getGenresNames(genres)}</p>\n          \n      </div>\n    </div>\n    <div class=\"about\">\n      <p class=\"title\">About</p>\n      <div class=\"about-container\">\n          <p class=\"text\">${overview}</p>\n          \n          </div>\n            </div>\n            <div class=\"buttons\">\n                <button class=\"button to-watched\">add to Watched</button>\n                <button class=\"button to-queue\">add to queue</button>\n            </div>\n        </div>\n    </div>\n      `;\n\n\n  \n      imgContainer.insertAdjacentHTML('afterbegin', markup);\n\n  }\n  ","import axios from 'axios';\n\nexport async function getMovies(url) {\n  try {\n    const response = await axios.get(`${url}`);\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","const API_KEY = '6f3a72a470b06bab99f8d69f54b4e2d3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`;\nconst SEARCH_URL = `${BASE_URL}/search/movie?api_key=${API_KEY}`;\nconst ID_URL = `${BASE_URL}/movie/`;\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport { API_KEY, BASE_URL, TREND_URL, SEARCH_URL, ID_URL, BASE_IMG_URL };\n","import {getMovies} from \"./api/fetch-movie\";\nimport {renderMovieCards} from \"./render-movie-cards\";\n\nconst paginationWrapRef = document.querySelector(\".pagination-wrap\");\n\nexport function renderPagination(currentPage, totalPages) {\n    let buttons = [];\n\n    if (currentPage > 1) {\n        buttons.push(createButton(currentPage - 1, true, \"arrow-left\"));\n    }\n\n    if (currentPage >= 4) {\n        buttons.push(createButton(1, true, \"first-button\"));\n    }\n\n    if (currentPage >= 5) {\n        buttons.push(createDotsEl());\n    }\n\n    if (currentPage >= 2) {\n        if (currentPage >= 3) {\n            buttons.push(createButton(currentPage-2))\n        }\n        buttons.push(createButton(currentPage-1));\n    }\n\n    buttons.push(createButton(currentPage, false));\n\n    if (currentPage <= totalPages-1) {\n        buttons.push(createButton(currentPage+1));\n        if (currentPage <= totalPages-2) {\n            buttons.push(createButton(currentPage+2));\n        }\n    }\n\n    if (currentPage < totalPages-3) {\n        buttons.push(createDotsEl());\n    }\n\n    if (currentPage <= totalPages-3) {\n        buttons.push(createButton(totalPages, true, \"last-button\"));\n    }\n\n    if (currentPage < totalPages) {\n        buttons.push(createButton(currentPage + 1, true, \"arrow-right\"));\n    }\n\n    paginationWrapRef.innerHTML = \"\";\n\n    buttons.forEach(button => paginationWrapRef.append(button));\n}\n\nfunction createBaseButton () {\n    const baseButton = document.createElement(\"button\");\n    baseButton.classList.add(\"pagination-button\");\n    return baseButton;\n}\n\nfunction createDotsEl() {\n    const newDotsEl = document.createElement(\"span\");\n    newDotsEl.innerHTML = `<span class=\"dots\">...</span>`;\n    return newDotsEl;\n}\n\nfunction createButton(pageNum, isButtonClickable = true, additionalClass = null) {\n    const newButton = createBaseButton();\n    newButton.dataset[\"page\"] = pageNum;\n    newButton.textContent = additionalClass && additionalClass.includes(\"arrow\")  ? \"\" : pageNum;\n\n    if (additionalClass) {\n        newButton.classList.add(additionalClass);\n    }\n\n    if (isButtonClickable) {\n        newButton.addEventListener(\"click\", pageButtonPressed);\n    } else {\n        newButton.classList.add(\"pagination-button--current\");\n    }\n\n    return newButton;\n}\n\nfunction pageButtonPressed(event) {\n    const page = event.target.dataset.page;\n    const lastUrl = localStorage.getItem(\"LAST_REQUESTED_URL\");\n    const newUrl = `${lastUrl}&page=${page}`;\n\n    getMovies(newUrl)\n    .then (response => {\n        renderMovieCards(response.results);\n        renderPagination(response.page, response.total_pages);\n    })\n}\n","import { getMovies } from './api/fetch-movie';\nimport { createMovieMarkup } from './create-movie-markup';\nimport { TREND_URL } from './api/api-vars';\nimport { renderPagination } from './pagination.js';\n\n(async () => {\n  const trendMoviesList = (await getMovies(TREND_URL));\n\n  renderMovieCards(trendMoviesList.results);\n\n  // Viktor:need to save last url to localstorage \n  localStorage.setItem('LAST_REQUESTED_URL', TREND_URL)\n  // Viktor:render pagination buttons\n  renderPagination(trendMoviesList.page, trendMoviesList.total_pages);\n})();\n\nexport function renderMovieCards(movies) {\n  const movieGalleryMarkup = movies\n    .map(movie => createMovieMarkup(movie))\n    .join('');\n  document\n    .querySelector('.gallery')\n    .innerHTML=movieGalleryMarkup;\n    //.insertAdjacentHTML('beforeend', movieGalleryMarkup);   //Viktor: we need replace card, not append!\n}\n","import { genres } from './genres.json';\nimport { BASE_IMG_URL } from './api/api-vars';\n\nexport function createMovieMarkup(movie) {\n  const { title, genre_ids, release_date, poster_path, id } = movie;\n\n  let year = '';\n  if (typeof release_date !== 'undefined' && release_date.length > 4) {\n    year = release_date.slice(0, 4);\n  }\n\n  const movieGenresList = getMovieGenresList(genre_ids).join(', ');\n\n  if (poster_path === null) {\n    return `<li>\n            <a class=\"gallery__link\" href=\"#\">\n              <img class=\"gallery__image\" src=\"https://dummyimage.com/395x574/000/fff.jpg&text=no+poster\" alt=\"${title} movie poster\" loading=\"lazy\">\n            \n            <div class=\"info\">\n              <p class=\"info__item\">${title}</p>\n              <div class=\"info-detail\">\n                <p class=\"info-detail__item\">${movieGenresList}</p>\n                <p class=\"info-detail__item\">${year}</p>\n              </div>\n            </div>\n            </a>\n          </li>`;\n  }\n\n  return `<li>\n            <a class=\"gallery__link\" href=\"#\">\n              <img class=\"gallery__image\" data-id=\"${id}\" src=\"${BASE_IMG_URL}${poster_path}\" alt=\"${title} movie poster\" loading=\"lazy\">\n            \n            <div class=\"info\">\n              <p class=\"info__item\">${title}</p>\n              <div class=\"info-detail\">\n                <p class=\"info-detail__item\">${movieGenresList}</p>\n                <p class=\"info-detail__item\">${year}</p>\n              </div>\n            </div>\n            </a>\n          </li>`;\n}\n\nexport function getMovieGenresList(genresIdsList) {\n  let movieGenres = genres.reduce((acc, { id, name }) => {\n    if (genresIdsList.includes(id)) {\n      acc.push(name);\n    }\n    return acc;\n  }, []);\n  if (movieGenres.length > 3) {\n    movieGenres = movieGenres.slice(0, 2);\n    movieGenres.push('Other');\n  }\n  return movieGenres;\n}\n","{\n  \"genres\": [\n    { \"id\": 28, \"name\": \"Action\" },\n    { \"id\": 12, \"name\": \"Adventure\" },\n    { \"id\": 16, \"name\": \"Animation\" },\n    { \"id\": 35, \"name\": \"Comedy\" },\n    { \"id\": 80, \"name\": \"Crime\" },\n    { \"id\": 99, \"name\": \"Documentary\" },\n    { \"id\": 18, \"name\": \"Drama\" },\n    { \"id\": 10751, \"name\": \"Family\" },\n    { \"id\": 14, \"name\": \"Fantasy\" },\n    { \"id\": 36, \"name\": \"History\" },\n    { \"id\": 27, \"name\": \"Horror\" },\n    { \"id\": 10402, \"name\": \"Music\" },\n    { \"id\": 9648, \"name\": \"Mystery\" },\n    { \"id\": 10749, \"name\": \"Romance\" },\n    { \"id\": 878, \"name\": \"Science Fiction\" },\n    { \"id\": 10770, \"name\": \"TV Movie\" },\n    { \"id\": 53, \"name\": \"Thriller\" },\n    { \"id\": 10752, \"name\": \"War\" },\n    { \"id\": 37, \"name\": \"Western\" }\n  ]\n}","const refs = {\n  queueBtn: document.querySelector('button.to-queue'),\n  gallery: document.querySelector('.library-gallery'),\n};\n\nconst { queueBtn, gallery } = refs;\n\nqueueBtn.addEventListener('click', onBtnQueueClick);\n\nfunction inLocalStorage(id) {\n  if (!localStorage.getItem('queue').contains(id)) {\n    return false;\n  }\n  return true;\n}\n\nfunction onBtnQueueClick() {\n  const id = document.querySelector('backdrop').id;\n  if (!inLocalStorage(id)) {\n    queueBtn.textContent = 'Remove to queue';\n    localStorage.setItem('queue', id);\n  } else {\n    queueBtn.textContent = 'Add to queue';\n    localStorage.removeItem('queue', id);\n  }\n}\n"],"names":["$gWoIc","parcelRequire","$4281cb08e8defb2a$var$refs","backdrop","document","querySelector","closeBtn","cardModal","imgContainer","$4281cb08e8defb2a$var$backdrop","$4281cb08e8defb2a$var$closeBtn","$4281cb08e8defb2a$var$cardModal","$4281cb08e8defb2a$var$imgContainer","$4281cb08e8defb2a$var$onCloseBtnClick","e","preventDefault","classList","add","$4281cb08e8defb2a$var$removeAllEventListenersModal","$4281cb08e8defb2a$var$onKeydownEscape","key","$4281cb08e8defb2a$var$onBackdropClick","target","contains","removeEventListener","window","$4281cb08e8defb2a$var$movieId","addEventListener","remove","nodeName","dataset","id","movieId1","idURL","$edYM8","ID_URL","API_KEY","getMovies","then","res","title","original_title","vote_average","vote_count","popularity","genres","overview","poster_path","markup","BASE_IMG_URL","map","genre","name","join","$4281cb08e8defb2a$var$getGenresNames","insertAdjacentHTML","$4281cb08e8defb2a$var$modalFilmCart","setAttribute","$4281cb08e8defb2a$var$fetchById","innerHTML","$2shzp","async","$c5553b5f0de3ff37$export$60e1c8f5f122c5ac","url","$parcel$interopDefault","get","data","error","console","$a5b16c4ddc8202a6$export$a9861bd62f48e142","$a5b16c4ddc8202a6$export$3e13cfa1fb75582c","$a5b16c4ddc8202a6$export$48314f791897fe3f","$a5b16c4ddc8202a6$export$b85aa4b53a955004","$a5b16c4ddc8202a6$export$1aee36635db19eb8","$1bab9c519cfa82bc$var$paginationWrapRef","$1bab9c519cfa82bc$export$825408fbca4f2040","currentPage","totalPages","buttons","push","$1bab9c519cfa82bc$var$createButton","$1bab9c519cfa82bc$var$createDotsEl","forEach","button","append","newDotsEl","createElement","pageNum","isButtonClickable","additionalClass","newButton","baseButton","$1bab9c519cfa82bc$var$createBaseButton","textContent","includes","$1bab9c519cfa82bc$var$pageButtonPressed","event","page","newUrl","localStorage","getItem","response","$8LTZf","renderMovieCards","results","total_pages","$662e245138d28e1d$export$bc472845f7b7844b","movies","movieGalleryMarkup","movie","$1gd6l","createMovieMarkup","trendMoviesList","TREND_URL","setItem","$2nhTy","renderPagination","$2eUFK","$0eb172ba7d82ec3b$export$8a980da361a674f","genre_ids","release_date","year","length","slice","movieGenresList","genresIdsList","movieGenres","reduce","acc","$0eb172ba7d82ec3b$export$e06660f04e0d4ab0","module","exports","JSON","parse","$a595e1401ec493e7$var$refs","queueBtn","gallery","$a595e1401ec493e7$var$queueBtn","$a595e1401ec493e7$var$gallery","$a595e1401ec493e7$var$inLocalStorage","removeItem"],"version":3,"file":"my-library.611cdbea.js.map"}